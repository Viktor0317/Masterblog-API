{
  "swagger": "2.0",
  "info": {
    "title": "Masterblog API",
    "version": "1.0.0",
    "description": "API documentation for the Masterblog application"
  },
  "servers": [
    {
      "url": "http://localhost:5002"
    }
  ],
  "tags": [
    {
      "name": "Post",
      "description": "Blog Post API - CRUD operations"
    }
  ],
  "paths": {
    "/api/posts": {
      "get": {
        "summary": "Retrieve all blog posts",
        "description": "Returns a list of all blog posts, optionally sorted by title or content.",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Sort posts by 'title' or 'content'",
            "required": false,
            "type": "string",
            "enum": ["title", "content"]
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Sort direction: 'asc' or 'desc'",
            "required": false,
            "type": "string",
            "enum": ["asc", "desc"],
            "default": "asc"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },
      "post": {
        "summary": "Create a new blog post",
        "description": "Adds a new blog post with a title and content.",
        "tags": ["Post"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Blog post data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "My new post"
                },
                "content": {
                  "type": "string",
                  "example": "This is the content of my post."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully"
          },
          "400": {
            "description": "Invalid input, title and content are required"
          }
        }
      }
    },
    "/api/posts/{id}": {
      "get": {
        "summary": "Retrieve a specific post",
        "description": "Get details of a blog post by its ID.",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the blog post",
            "required": true,
            "type": "integer",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Post found"
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "put": {
        "summary": "Update a blog post",
        "description": "Updates a post by its ID.",
        "tags": ["Post"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the blog post",
            "required": true,
            "type": "integer",
            "example": 1
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated post data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Updated post title"
                },
                "content": {
                  "type": "string",
                  "example": "Updated post content."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully"
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a blog post",
        "description": "Deletes a post by its ID.",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the blog post",
            "required": true,
            "type": "integer",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    },
    "/api/posts/search": {
      "get": {
        "summary": "Search for blog posts",
        "description": "Search for posts by title or content.",
        "tags": ["Post"],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Search term for the title",
            "required": false,
            "type": "string",
            "example": "Flask"
          },
          {
            "name": "content",
            "in": "query",
            "description": "Search term for the content",
            "required": false,
            "type": "string",
            "example": "API"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful search"
          }
        }
      }
    }
  }
}
